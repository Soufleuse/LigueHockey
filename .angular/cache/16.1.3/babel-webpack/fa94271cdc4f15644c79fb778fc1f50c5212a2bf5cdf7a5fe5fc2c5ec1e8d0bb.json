{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { baseService } from './baseService';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EquipeService = /*#__PURE__*/(() => {\n  class EquipeService extends baseService {\n    constructor(http) {\n      super();\n      this.http = http;\n      this.equipeUrl = this.baseUrl + 'EquipeBds';\n    }\n    obtenirListeEquipes() {\n      return this.http.get(this.equipeUrl, this.httpOptions);\n    }\n    obtenirEquipe(noEquipe) {\n      const monUrl = this.equipeUrl + `/` + noEquipe;\n      return this.http.get(monUrl, this.httpOptions);\n    }\n    creerEquipe(equipe) {\n      const monUrl = this.equipeUrl;\n      return this.http.post(monUrl, equipe, this.httpOptions);\n      //.pipe(catchError(this.handleError('post', equipe))); // Voir quoi faire avec la pipe.\n    }\n\n    majEquipe(equipe) {\n      const monUrl = this.equipeUrl + `/` + equipe.no_Equipe;\n      return this.http.put(monUrl, equipe, this.httpOptions).pipe(catchError(this.handleError('put', equipe)));\n    }\n  }\n  EquipeService.ɵfac = function EquipeService_Factory(t) {\n    return new (t || EquipeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  EquipeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EquipeService,\n    factory: EquipeService.ɵfac,\n    providedIn: 'root'\n  });\n  return EquipeService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}