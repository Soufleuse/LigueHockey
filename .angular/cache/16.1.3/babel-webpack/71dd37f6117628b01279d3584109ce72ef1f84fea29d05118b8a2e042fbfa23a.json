{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { of } from \"rxjs\";\nimport { environment } from '../../environments/environment';\nexport class baseService {\n  constructor() {\n    this.baseUrl = environment.baseUrl;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  /**\n   * Code de https://angular.io/tutorial/toh-pt6 .\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  handleError(operation = 'operation', result) {\n    return error => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n      // Let the app keep running by returning an empty result.\n      // Peut-Ãªtre retourner un objet contenant un message d'erreur.\n      return of(result);\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}